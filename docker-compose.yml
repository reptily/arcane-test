version: '3'
services:

#Nginx Service
  webserver:
    image: nginx:alpine
    container_name: "${PREFIX}webserver"
    restart: unless-stopped
    tty: true
    ports:
      - "${WWW_PORT}:80"
      - "${WWW_SECURITY_PORT}:443"
    volumes:
      - ./www:/var/www
      - ./config/nginx/:/etc/nginx/conf.d/
      - ./config/nginx/:/etc/nginx/sites-available/
      - ./config/nginx/:/etc/nginx/sites-enabled/
      - ./scripts:/bin/app
    networks:
      - arcane-network

#PHP
  php:
    build:
      context: "./image/php/${PHP_VERSION}/."
    image: "arcane-dev/php:${PHP_VERSION}"
    container_name: "${PREFIX}php"
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./www:/var/www
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
      - ./scripts:/bin/app
    ports:
      - "${XDEBUG_PORT}:9003"
    networks:
      arcane-network:
        aliases:
          - php

  #MySQL Service
  mysql:
    image: "mysql:${MYSQL_VERSION}"
    container_name: "${PREFIX}mysql"
    restart: unless-stopped
    tty: true
    volumes:
      - ./db/mysql:/var/lib/mysql
      - ./scripts:/bin/app
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - arcane-network

  #Redis Service
  redis:
    image: redis
    container_name: "${PREFIX}redis"
    restart: unless-stopped
    tty: true
    volumes:
      - ./db/redis:/var/lib/redis
      - ./scripts:/bin/app
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - arcane-network

  #Kafka
  broker:
    image: apache/kafka:latest
    container_name: "${PREFIX}broker"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: "PLAINTEXT://${PREFIX}broker:9092,CONTROLLER://${PREFIX}broker:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${PREFIX}broker:9092"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@${PREFIX}broker:9093"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - ./db/kafka:/var/lib/kafka/data
    networks:
      - arcane-network

#Docker Networks
networks:
  arcane-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
